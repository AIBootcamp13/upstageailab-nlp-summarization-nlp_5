experiment_name: batch_optimization_medium_medium_accum
description: Medium batch size with medium gradient accumulation (effective batch=64)

# 모델 구성
model:
  name: digit82/kobart-summarization
  architecture: kobart

# 토크나이저 구성  
tokenizer:
  encoder_max_len: 512
  decoder_max_len: 200
  bos_token: "<s>"
  eos_token: "</s>"
  special_tokens:
    - '#Person1#'
    - '#Person2#'
    - '#Person3#'
    - '#PhoneNumber#'
    - '#Address#'
    - '#DateOfBirth#'
    - '#PassportNumber#'
    - '#SSN#'
    - '#CardNumber#'
    - '#CarNumber#'
    - '#Email#'

# 학습 구성 - 중간 배치, 중간 accumulation
training:
  num_train_epochs: 5  # 빠른 실험
  learning_rate: 1.0e-05
  
  # 배치 설정: 중간 배치 크기 + 중간 accumulation
  per_device_train_batch_size: 16   # 중간 배치 크기 (균형적)
  per_device_eval_batch_size: 16
  gradient_accumulation_steps: 4    # 중간 accumulation (효과적인 배치 크기 = 64)
  
  # 메모리 최적화
  gradient_checkpointing: true      # 메모리 절약
  fp16: true                       # Mixed precision
  optim: "adamw_torch"            # 표준 optimizer
  
  # 표준 설정
  warmup_steps: 100
  weight_decay: 0.01
  seed: 42
  evaluation_strategy: epoch
  save_strategy: epoch
  save_total_limit: 1
  logging_steps: 50
  load_best_model_at_end: true
  metric_for_best_model: "eval_rouge_combined_f1"
  greater_is_better: true
  
  # 조기 종료
  early_stopping_patience: 2
  early_stopping_threshold: 0.001
  
  # 데이터로더 설정
  dataloader_num_workers: 4  # 중간 수준의 워커
  dataloader_drop_last: false
  group_by_length: true
  predict_with_generate: true
  remove_unused_columns: true
  
  # 메모리 관리
  torch_empty_cache_steps: 100  # 보통 빈도로 캐시 비우기

# 생성 구성
generation:
  max_length: 200
  num_beams: 4
  no_repeat_ngram_size: 2
  early_stopping: true
  length_penalty: 1.0

# 추론 구성
inference:
  batch_size: 16  # 중간 크기 배치
  generate_max_length: 200
  remove_tokens:
    - '<usr>'
    - '<s>'
    - '</s>'
    - '<pad>'

# WandB 구성
wandb:
  name: "05b_batch_medium_medium_accum"
  notes: "Batch optimization: medium batch (16) + medium accumulation (4) = effective 64"
  tags: ["batch_optimization", "medium_batch", "balanced", "kobart"]
  
# 데이터 구성
data:
  train_file: "train.csv"
  dev_file: "dev.csv"
  test_file: "test.csv"

# 성능 모니터링
monitoring:
  log_memory_usage: true
  log_training_speed: true
  log_gpu_stats: true
