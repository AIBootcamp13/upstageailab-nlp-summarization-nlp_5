# 배치 크기 최적화 실험
experiment_name: optimized_batch_size
description: "큰 배치 크기와 gradient accumulation 실험"

general:
  model_name: digit82/kobart-summarization
  data_path: data/
  train_path: data/train.csv
  val_path: data/dev.csv
  name: batch_optimization

model:
  architecture: bart
  checkpoint: digit82/kobart-summarization

tokenizer:
  bos_token: <s>
  eos_token: </s>
  encoder_max_len: 512
  decoder_max_len: 100

training:
  do_eval: true
  do_train: true
  evaluation_strategy: steps
  eval_steps: 200
  num_train_epochs: 5
  per_device_train_batch_size: 24    # RTX 3090 24GB 대용량 배치
  per_device_eval_batch_size: 48     # 최대 배치 활용
  gradient_accumulation_steps: 1     # 대용량 배치로 누적 불필요
  learning_rate: 2.0e-05
  fp16: true
  gradient_checkpointing: false      # 메모리 여유로우므로 비활성화
  dataloader_num_workers: 16         # 48코어 최대 활용
  dataloader_pin_memory: true        # 251GB RAM 활용
  group_by_length: true              # 효율성 증대
  logging_steps: 100
  save_strategy: steps
  save_steps: 200
  save_total_limit: 3
  load_best_model_at_end: true

wandb:
  entity: lyjune37-juneictlab
  project: nlp-5
  name: batch_optimization_rtx3090_lyj
  tags: [batch_optimization, high_throughput, RTX3090, lyj]
  notes: "배치 크기 최적화 RTX 3090 대용량 실험"
